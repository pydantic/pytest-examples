[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'pytest_examples/__init__.py'

[tool.hatch.build.targets.sdist]
# limit which files are included in the sdist (.tar.gz) asset,
# see https://github.com/pydantic/pydantic/pull/4542
include = [
    '/README.md',
    '/Makefile',
    '/pytest_examples',
    '/requirements',
    '/tests',
]

[project]
name = 'pytest-examples'
description = 'Pytest plugin for testing examples in docstrings and markdown files.'
authors = [
    {name = 'Samuel Colvin', email = 's@muelcolvin.com'},
]
license = 'MIT'
readme = 'README.md'
classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Environment :: Console',
    'Environment :: MacOS X',
    'Framework :: Pytest',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
requires-python = '>=3.7'
dynamic = ['version']
dependencies = [
    'pytest>=7',
    'black>=23',
    'ruff>=0.5.0',
]

[project.entry-points.pytest11]
examples = 'pytest_examples'

[project.urls]
repository = 'https://github.com/pydantic/pytest-examples'

[tool.pytest.ini_options]
testpaths = ['tests', 'example']
filterwarnings = 'error'
xfail_strict = true

[tool.ruff]
line-length = 120
target-version = 'py37'
exclude = ['cases_update']
lint.extend-ignore = [
    'E721',  # using type() instead of isinstance() - we use this in tests
]
lint.extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I']
lint.flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
lint.mccabe = { max-complexity = 14 }
lint.isort = { known-first-party = ['pytest_examples'] }

[tool.ruff.format]
quote-style = 'single'

[tool.coverage.run]
source = ['pytest_examples']
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.black]
exclude = '.*/cases_update/.*'
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true
